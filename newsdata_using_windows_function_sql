// TOP 10 CATEGORIES
SELECT COUNT(CATEGORIES) AS TOTAL_CATEGORIES, CATEGORIES FROM NEWSDATA
GROUP BY CATEGORIES
ORDER BY TOTAL_CATEGORIES DESC
LIMIT 10;

// CATEGORIES WITH TOP 10 CLICKS
SELECT COUNT(CLICK) AS COUNT_CLICK, CATEGORIES FROM NEWSDATA
WHERE CATEGORIES IS NOT NULL 
GROUP BY CATEGORIES
ORDER BY COUNT_CLICK DESC
LIMIT 10;



//HOW MANY TIMES THE USER HAS READ THE ARTICLE
SELECT COUNT(UUSERID) AS COUNT_USER,UUSERID, ARTICLEID, SUM(CLICK) AS TOTAL_CLICK FROM NEWSDATA
GROUP BY UUSERID, ARTICLEID
ORDER BY COUNT_USER DESC;

//WHAT'S THE TIME DURATION THAT A USER HAS READ THE ARTICLE
SELECT COUNT(UUSERID) AS COUNT_USER,UUSERID, ARTICLEID, SUM(TIMEDURATION) AS TOTAL_TIMEDURATION FROM NEWSDATA
GROUP BY UUSERID, ARTICLEID
ORDER BY TOTAL_TIMEDURATION DESC;

//VISITDATE TREND
SELECT TIMEDURATION, VISITTIME, VISITTIME - interval '20 hours, 0 minutes, 0 SECONDS' AS DIFF FROM NEWSDATA
WHERE TIMEDURATION < 135
ORDER BY TIMEDURATION DESC;

select to_time('04:15:29') + interval '3 hours, 18 minutes';

SELECT VISITTIME,VISITTIME - interval '20 hours, 0 minutes, 0 SECONDS' AS DIFF FROM NEWSDATA; 

SELECT * FROM NEWSDATA;
SELECT DATEDIFF(MINUTE, '11:10:10' , '11:20:00') AS MinuteDiff

SELECT VISITDATE, DATEDIFF(YEAR, VISITDATE, '1995-04-29') AS DIFF FROM NEWSDATA;

//User with multiple visitdate
SELECT UUSERID,VISITDATE, COUNT(*) AS OCCURANCE FROM NEWSDATA
GROUP BY UUSERID, VISITDATE
HAVING OCCURANCE > 1
ORDER BY OCCURANCE DESC;

with CTE as 
(
SELECT * FROM NEWSDATA 
WHERE UUSERID in
(
SELECT UUSERID
FROM NEWSDATA 
GROUP BY UUSERID 
HAVING COUNT(DISTINCT VISITDATE)>1
)
ORDER BY 1
 )
 select 
        DATEDIFF(DD,VISITDATE,
            LEAD(VISITDATE) OVER(PARTITION BY UUSERID ORDER BY VISITDATE)
            ) AS DIFF_DAYS,
         count(distinct UUSERID)
 FROM  CTE
 group by 
 



//CHECK FOR TIME DIFF 
with CTE as 
(
SELECT * FROM NEWSDATA 
WHERE UUSERID in
(
SELECT UUSERID
FROM NEWSDATA 
GROUP BY UUSERID 
HAVING COUNT(DISTINCT VISITDATE)>1
)
ORDER BY 1
 )
 select *,
        TIMEDIFF(HH,VISITTIME,
            LEAD(VISITTIME) OVER(PARTITION BY UUSERID ORDER BY VISITTIME)
            ) AS HOUR_DIFF,
        TIMEDIFF(MI,VISITTIME,
            LEAD(VISITTIME) OVER(PARTITION BY UUSERID ORDER BY VISITTIME)
            ) AS MINUTES_DIFF
 FROM  CTE;
 
 
 
//CHECK FOR DATE DIFFERENCE IF USER HAVE MULTIPLE VISIT
SELECT UUSERID,VISITDATE, COUNT(*) AS OCCURANCE FROM NEWSDATA
GROUP BY UUSERID, VISITDATE
HAVING OCCURANCE > 1
ORDER BY OCCURANCE DESC;

WITH NEW AS (SELECT UUSERID,VISITDATE, COUNT(*) AS OCCURANCE,
    DATEDIFF(DD,VISITDATE,
            LEAD(VISITDATE) OVER(PARTITION BY UUSERID ORDER BY VISITDATE)
            ) AS DIFF
    FROM NEWSDATA
    GROUP BY UUSERID, VISITDATE
    HAVING OCCURANCE > 1)
SELECT UUSERID, VISITDATE, DIFF FROM NEW
//WHERE DIFF > 1
ORDER BY DIFF DESC;

WITH NEW AS (SELECT UUSERID,VISITDATE,
    DATEDIFF(MM,VISITDATE,
            LEAD(VISITDATE) OVER(PARTITION BY UUSERID ORDER BY VISITDATE)
            ) AS DIFF
    FROM NEWSDATA)
SELECT UUSERID, VISITDATE, DIFF FROM NEW;
//WHERE DIFF > 1
//ORDER BY DIFF DESC;
    
    
    
with CTE as 
(
SELECT * FROM NEWSDATA 
WHERE UUSERID in
(
SELECT UUSERID
FROM NEWSDATA 
GROUP BY UUSERID 
HAVING COUNT(DISTINCT VISITDATE)>1
)
ORDER BY 1
 )
 ,CTE2 as 
 (
 select 
        ifnull(DATEDIFF(DD,VISITDATE,
            LEAD(VISITDATE) OVER(PARTITION BY UUSERID ORDER BY VISITDATE)
            ),1) AS DIFF_DAYS,
         *
 FROM  CTE
 order by UUSERID,VISITDATE
)
,CTE3 AS
(
  select *,
  avg(DIFF_DAYS) OVER(PARTITION BY UUSERID ORDER BY UUSERID)::integer AS ACTIVE_USER_AVG_DAYS_DIFF,
  case when ACTIVE_USER_AVG_DAYS_DIFF <= 10 then 'Active User' else 'Casual User' end as USER_FLAG
  
  from CTE2
)
SELECT *,
    row_number() over(partition by uuserid order by TIMEDURATION DESC) AS ROW_NUM
FROM CTE3



